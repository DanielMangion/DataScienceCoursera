install.packages("shiny")
?remove
?remove.packages
install.packages("shiny")
setwd("~/")
setwd("~/")
setwd("C:/Users/danie/Documents")
install.packages("shiny")
install.packages("shiny")
.libPaths()
?.libPaths()
.libPaths(`\danie\Documents)
.libPaths("~\danie\Documents")
.libPaths("~/Documents")
.libPaths()
install.packages("shiny")
.libPaths()
.Library("~/Documents")
?.Library
.libPaths()
.libPaths(new = "~/Documents")
.libPaths()
.libPaths( c( .libPaths(), "~/Documents") )
.libPaths()
.libPaths( c( .libPaths(), "C:/Users/danie/Documents") )
.libPaths()
q()
install.packages("shiny")
MD
a <- available.packages()
a
View(a)
View(a)
View(a)
a <- 1
.libPaths()
export R_LIBS="c:/"
export R_LIBS="c:"
help("startup")
help(startup)
??startup
help.start()
help("Startup")
help(".libpaths")
help(".libPaths")
.libPaths()
.libPaths(new = "C:/Users/danie/OneDrive/Documents/R/win-library/3.3")
.libPaths()
Sys.getenv('R_LIBS')
.libPaths()
.libPaths()
install.packages("slidify")
install.packages("shiny")
install.packages("shiny", dependencies = TRUE)
install.packages(c("shiny", "ggplot2", "devtools") dependencies = TRUE)
install.packages(c("shiny", "ggplot2", "devtools"), dependencies = TRUE)
library()
library(ggplot2)
search()
library(devtools)
search()
.libPaths()
find.package("devtools")
install.packages("devtools", dependencies = TRUE)
library(devtools)
find_rtools()
find_rtools()
swirl()
library.load (swirl)
library(swirl)
SWIRL()
swirl()
info()
main()
x <- c(44, NA, 5, NA)
x *3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y >0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2,  norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vec["Bar"]
vec["bar"]
vect["bar"]
vect[c("foo","bar")]
my_vector <- [1:20]
my_vector <- c(1:20)
my_vector <- c([1:20])
my_vector <- c[1:20]
my_vector <- c[1:20]
my_vector <- c(1:20)
my_vector(c(1:20))
info()
play()
my_vector
remove(my_vector)
my_vector(c(1:20))
my_vector <- c(1:20)
remove(my_vector)
nxt()
my_vector <- c(1:20)
my_vector <- [1:20]
my_vector[1:20]
skip()
info()
main()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)
colnames(my_data) <- cnames
my_data
ls
clear()
z <-5
while( z >= 3 && z <= 10) {}
rm(z)
for for(iconv(x =   ))
library(swil)
library(swirll)
library(swirl)
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5!=7
5!=7
5!==7
5 !== 7
5 != 7 = true
5 = 7
5 != 7
5 !TRUE 7
5 != 7
!5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || ^ !=8 && 4 > 3.9
5 > 8 || 6 !=8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins','twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function()
boring_function
submit()
submit()
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 5)
remainder(4, div = 2)
args(remainder)
submit(0)
submit()
submit()
submit()
submit()
evaluate(sd, c(1.4,3.6, 7.9, 8.8))
evaluate(function(x){ x+1 },6)
evaluate(function(x){ x[1] }, c(8,4,0))
evaluate(function(x){ x[3] }, c(8,4,0))
evaluate(function(x){ x[1,3] }, c(8,4,0))
evaluate(function(x){ x[3] }, c(8,4,0))
evaluate(function(x){ x[-1] }, c(8,4,0))
?paste
paste("Programming", "is","fun!")
submit()
submit()
submit()
submit()
submit()
submit()
telegram("testing")
submit()
submit()
mad_libs("malta", "full", "guiliottine")
submit()
"I" %p% "love" %p% "R"
"I" %p% "love" %p% "R!"
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 < as.Date("1969-01-01")
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4<- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
pwd
swd
getwd()
dir
dir()
cd dss
setwd("C:/Users/danie/Documents/DSS/RProgPractice")
dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip"
download.file(dataset_url, "diet_data.zip")
unzip("diet_data.zip", exdir = "diet_data")
list.files("diet_data/")
Andy <- read.csv("diet_data/Andy.csv")
head(Andy)
length(Andy$Day)
dim(Andy)
str(Andy)
summary(Andy)
names(Andy)
Andy[1, "Weigth"]
Andy[1, "Weight"]
Andy[30, "Weight"]
Andy[which(Andy$Day == 30), "Weight
"]
dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip"
download.file(dataset_url, "diet_data.zip")
unzip("diet_data.zip",exdir = "diet_data")
list.files("diet_data/")
andy <- read.csv("diet_data/Andy.csv")
head(andy)
length(andy$Day)
dim(andy)
str(andy)
summary(andy)
names(andy)
andy[1, "Weight"]
andy[30, "Weight"]
andy[which(andy$Day ==30), "Weight"]
andy[which(andy[, "Day"] == 30), "Weight"]
subset(andy$Weight, andy$Day==30)
andy_start <- andy[1, "Weight"]
andy_end <- andy[30, "Weight"]
andy_loss <- andy_start - andy_end
andy_loss
files <- list.files("diet_data")
files
files[1]
head(read.csv(files[3]))
head(read.csv(files[3]))
files_full <- list.files("diet_data", full.names = TRUE)
files_full
head(read.csv(files_full[3]))
andy_david <- rbind(andy, read.csv(files_full[2]))
head(andy_david)
tail(andy_david)
day_25 <- andy_david[which(andy_david$Day == 25), ]
day_25
day_25_2 <- sub(andy_david$Day ==25)
day_25_2 <- subet(andy_david$Day ==25)
day_25_2 <- subset(andy_david$Day ==25)
day_25_2 <- subset(andy_david$Day == 25)
day_25_2 <- subset(andy_david, andy_david$Day == 25)
day_25_2
for (i in 1:5) {print(i)}
for (i in 1:5) {
dat <- rbind(dat, read.csv(files_full(i)))}
day <- data.frame()
for (i in 1:5) {
dat <- rbind(dat, read.csv(files_full[i]))}
dat <- data.frame()
for (i in 1:5) {
dat <- rbind(dat, read.csv(files_full[i]))}
str(dat)
head(dat2)
dat2 <- rbind(dat2, read.csv(files_full[i]))
for (i in 1:5){
dat2 <- data.frame()
dat2 <- rbind(dat2, read.csv(files_full[i]))
}
str(dat2)
head(dat2)
source('~/.active-rstudio-document')
median(dat$Weight)
dat
median(dat$Weight, na.rm = TRUE)
dat_30 <- dat[which(dat[,"Day"] == 30),]
dat_30
median(dat_30$Weight)
median(dat_subset[, "Weight"], na.rm = TRUE)
median(dat_subset[, "Weight"], na.rm = TRUE)
source('~/.active-rstudio-document')
weigthmedian <- function(directory, day){
files_list <- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in 1:5){
dat <- rbind(dat, read.csv(files_list[i]))
}
dat_subset <- dat[which(dat[, "Day"] == day),]
median(dat_subset[, "Weight"], na.rm = TRUE)
}
weigthmedian("diet_data", 4)
weigthmedian("diet_data", 17)
getwd()
cd
setwd"C:/Users/danie/Documents/DSS/DataScienceCoursera/R_Programming/Week2"
setwd("C:/Users/danie/Documents/DSS/DataScienceCoursera/R_Programming/Week2")
dir
dir(getwd)
unzip("rprog_data_specdata.zip", exdir = "AirPollutionData")
dir("AirPollutionData/specdata/")
head("200.csv")
list.files("AirPollutionData/specdata/")
read.csv("AirPollutionData/specdata/200.csv")
head(read.csv("AirPollutionData/specdata/200.csv"))
head(read.csv("AirPollutionData/specdata/300.csv"))
files_list <- list.files(directory, full.names = TRUE)
pollutantmean <- function(directory, pollutant, id){
files_list <- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in 1:332){
dat <- rbind(dat, read.csv(files_list[i]))
}
dat_subset <- dat[which(dat[, "id"] == id),]
median(dat_subset[, "pollutant"], na.rm = TRUE)
}
pollutantmean("AirPollutionData/specdata/", "nitrate", 23)
pollutantmean("AirPollutionData/specdata/", "nitrate", 23)
pollutantmean("AirPollutionData/specdata/", "nitrate", 23)
dat
pollutantmean <- function(directory, pollutant, id){
files_list <- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in 1:332){
dat <- rbind(dat, read.csv(files_list[i]))
}
dat_subset <- dat[which(dat[, "ID"] == id),]
median(dat_subset[, "pollutant"], na.rm = TRUE)
}
files_list
pollutantmean <- function(directory, pollutant, id){
files_list <- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in 1:332){
dat <- rbind(dat, read.csv(files_list[i]))
}
print(dat)
dat_subset <- dat[which(dat[, "ID"] == id),]
median(dat_subset[, "pollutant"], na.rm = TRUE)
}
pollutantmean("AirPollutionData/specdata/", "nitrate", 23)
pollutantmean <- function(directory, pollutant, id){
files_list <- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in 1:332){
dat <- rbind(dat, read.csv(files_list[i]))
}
print(dat)
dat_subset <- dat[which(dat[, "ID"] == id),]
median(dat_subset[, "pollutant" == pollutant], na.rm = TRUE)
}
pollutantmean("AirPollutionData/specdata/", "nitrate", 23)
pollutantmean <- function(directory, pollutant, id){
files_list <- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in 1:25){
dat <- rbind(dat, read.csv(files_list[i]))
}
print(dat)
dat_subset <- dat[which(dat[, "ID"] == id),]
median(dat_subset[, "pollutant" == pollutant], na.rm = TRUE)
}
pollutantmean("AirPollutionData/specdata/", "nitrate", 23)
pollutantmean("AirPollutionData/specdata/", "nitrate", 23)
pollutantmean <- function(directory, pollutant, id){
files_list <- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in 1:25){
dat <- rbind(dat, read.csv(files_list[i]))
}
print(dat)
dat_subset <- dat[which(dat[, "ID"] == id),]
median(dat_subset([, "pollutant"] == pollutant), na.rm = TRUE)
}
pollutantmean <- function(directory, pollutant, id){
files_list <- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in 1:25){
dat <- rbind(dat, read.csv(files_list[i]))
}
print(dat)
dat_subset <- dat[which(dat[, "ID"] == id),]
median(dat_subset([, "pollutant"] == pollutant)], na.rm = TRUE)
}
pollutantmean <- function(directory, pollutant, id){
files_list <- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in 1:25){
dat <- rbind(dat, read.csv(files_list[i]))
}
print(dat)
dat_subset <- dat[which(dat[, "ID"] == id),]
median(dat_subset([, "pollutant"] == pollutant]), na.rm = TRUE)
}
pollutantmean <- function(directory, pollutant, id){
files_list <- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in 1:25){
dat <- rbind(dat, read.csv(files_list[i]))
}
print(dat)
dat_subset <- dat[which(dat[, "ID"] == id),]
median(dat_subset[, pollutant], na.rm = TRUE)
}
View(pollutantmean)
pollutantmean("AirPollutionData/specdata", nitrate, 23).
pollutantmean("AirPollutionData/specdata", nitrate, 23)
pollutantmean <- function(directory, pollutant, id){
files_list <- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in 1:25){
dat <- rbind(dat, read.csv(files_list[i]))
}
print(dat)
dat_subset <- dat[which(dat[, "ID"] == id),]
median(dat_subset[, ==pollutant], na.rm = TRUE)
}
pollutantmean <- function(directory, pollutant, id){
files_list <- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in 1:25){
dat <- rbind(dat, read.csv(files_list[i]))
}
print(dat)
dat_subset <- dat[which(dat[, "ID"] == id),]
median(dat_subset[which(dat_subset[, "pollutant"] == pollutant),], na.rm = TRUE)
}
pollutantmean("AirPollutionData/specdata", nitrate, 23)
